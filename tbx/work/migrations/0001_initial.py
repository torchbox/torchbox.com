# Generated by Django 4.2.8 on 2024-01-02 10:49

from django.db import migrations, models
import django.db.models.deletion

import modelcluster.fields
import wagtail.blocks
import wagtail.embeds.blocks
import wagtail.fields
import wagtail.images.blocks

import wagtailmarkdown.blocks
import wagtailmedia.blocks

import tbx.core.blocks


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("torchbox", "0001_initial"),
        ("people", "0001_initial"),
        ("images", "0001_initial"),
        ("wagtailcore", "0089_log_entry_data_json_null_to_object"),
        ("taxonomy", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WorkPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                (
                    "date",
                    models.DateField(blank=True, null=True, verbose_name="Post date"),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "h2",
                                wagtail.blocks.CharBlock(
                                    form_classname="title",
                                    icon="title",
                                    template="patterns/molecules/streamfield/blocks/heading2_block.html",
                                ),
                            ),
                            (
                                "h3",
                                wagtail.blocks.CharBlock(
                                    form_classname="title",
                                    icon="title",
                                    template="patterns/molecules/streamfield/blocks/heading3_block.html",
                                ),
                            ),
                            (
                                "h4",
                                wagtail.blocks.CharBlock(
                                    form_classname="title",
                                    icon="title",
                                    template="patterns/molecules/streamfield/blocks/heading4_block.html",
                                ),
                            ),
                            (
                                "intro",
                                wagtail.blocks.RichTextBlock(
                                    icon="pilcrow",
                                    template="patterns/molecules/streamfield/blocks/intro_block.html",
                                ),
                            ),
                            (
                                "paragraph",
                                wagtail.blocks.RichTextBlock(
                                    icon="pilcrow",
                                    template="patterns/molecules/streamfield/blocks/paragraph_block.html",
                                ),
                            ),
                            (
                                "aligned_image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        (
                                            "alignment",
                                            tbx.core.blocks.ImageFormatChoiceBlock(),
                                        ),
                                        ("caption", wagtail.blocks.CharBlock()),
                                        (
                                            "attribution",
                                            wagtail.blocks.CharBlock(required=False),
                                        ),
                                    ],
                                    label="Aligned image",
                                    template="patterns/molecules/streamfield/blocks/aligned_image_block.html",
                                ),
                            ),
                            (
                                "wide_image",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        )
                                    ],
                                    label="Wide image",
                                    template="patterns/molecules/streamfield/blocks/wide_image_block.html",
                                ),
                            ),
                            (
                                "bustout",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(),
                                        ),
                                        ("text", wagtail.blocks.RichTextBlock()),
                                    ],
                                    template="patterns/molecules/streamfield/blocks/bustout_block.html",
                                ),
                            ),
                            (
                                "pullquote",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "quote",
                                            wagtail.blocks.CharBlock(
                                                form_classname="quote title"
                                            ),
                                        ),
                                        ("attribution", wagtail.blocks.CharBlock()),
                                    ],
                                    template="patterns/molecules/streamfield/blocks/pullquote_block.html",
                                ),
                            ),
                            (
                                "raw_html",
                                wagtail.blocks.RawHTMLBlock(
                                    icon="code",
                                    label="Raw HTML",
                                    template="patterns/molecules/streamfield/blocks/raw_html_block.html",
                                ),
                            ),
                            (
                                "mailchimp_form",
                                wagtail.blocks.RawHTMLBlock(
                                    icon="code",
                                    label="Mailchimp embedded form",
                                    template="patterns/molecules/streamfield/blocks/mailchimp_form_block.html",
                                ),
                            ),
                            (
                                "markdown",
                                wagtailmarkdown.blocks.MarkdownBlock(
                                    icon="code",
                                    template="patterns/molecules/streamfield/blocks/markdown_block.html",
                                ),
                            ),
                            (
                                "embed",
                                wagtail.embeds.blocks.EmbedBlock(
                                    group="Media",
                                    icon="code",
                                    template="patterns/molecules/streamfield/blocks/embed_block.html",
                                ),
                            ),
                            (
                                "video_block",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "video",
                                            wagtailmedia.blocks.VideoChooserBlock(),
                                        ),
                                        (
                                            "autoplay",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Automatically start and loop the video. Please use sparingly.",
                                                required=False,
                                            ),
                                        ),
                                        (
                                            "use_original_width",
                                            wagtail.blocks.BooleanBlock(
                                                default=False,
                                                help_text="Use the original width of the video instead of the default content width. Note that videos wider than the content width will be limited to the content width.",
                                                required=False,
                                            ),
                                        ),
                                    ],
                                    group="Media",
                                ),
                            ),
                        ],
                        use_json_field=True,
                    ),
                ),
                (
                    "body_word_count",
                    models.PositiveIntegerField(editable=False, null=True),
                ),
                ("visit_the_site", models.URLField(blank=True)),
                ("listing_summary", models.CharField(blank=True, max_length=255)),
                ("client", models.TextField(blank=True)),
                (
                    "call_to_action",
                    wagtail.fields.StreamField(
                        [
                            (
                                "key_points_summary",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            ("title", wagtail.blocks.CharBlock()),
                                            ("intro", wagtail.blocks.CharBlock()),
                                            ("link", wagtail.blocks.PageChooserBlock()),
                                        ]
                                    ),
                                    help_text="Please add a minumum of 3 and a maximum of 6 key points.",
                                    icon="list-ul",
                                    max_num=6,
                                    min_num=3,
                                    template="patterns/molecules/streamfield/blocks/key_points_summary.html",
                                ),
                            ),
                            (
                                "testimonials",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                "quote",
                                                wagtail.blocks.CharBlock(
                                                    form_classname="quote title"
                                                ),
                                            ),
                                            ("name", wagtail.blocks.CharBlock()),
                                            ("role", wagtail.blocks.CharBlock()),
                                            (
                                                "link",
                                                wagtail.blocks.StreamBlock(
                                                    [
                                                        (
                                                            "internal_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "page",
                                                                        wagtail.blocks.PageChooserBlock(),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                        (
                                                            "external_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "link_url",
                                                                        wagtail.blocks.URLBlock(
                                                                            label="URL"
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                            ),
                                        ]
                                    ),
                                    icon="openquote",
                                    template="patterns/molecules/streamfield/blocks/testimonial_block.html",
                                ),
                            ),
                            (
                                "clients",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                "image",
                                                wagtail.images.blocks.ImageChooserBlock(),
                                            ),
                                            (
                                                "link",
                                                wagtail.blocks.StreamBlock(
                                                    [
                                                        (
                                                            "internal_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "page",
                                                                        wagtail.blocks.PageChooserBlock(),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                        (
                                                            "external_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "link_url",
                                                                        wagtail.blocks.URLBlock(
                                                                            label="URL"
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                            ),
                                        ]
                                    ),
                                    icon="site",
                                    label="Clients logo",
                                    template="patterns/molecules/streamfield/blocks/client-logo-block.html",
                                ),
                            ),
                            (
                                "embed_plus_cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock()),
                                        ("intro", wagtail.blocks.CharBlock()),
                                        (
                                            "link",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "external_link",
                                            wagtail.blocks.URLBlock(
                                                label="External Link", required=False
                                            ),
                                        ),
                                        ("button_text", wagtail.blocks.CharBlock()),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                label="Youtube Embed", required=False
                                            ),
                                        ),
                                    ],
                                    icon="code",
                                    label="Embed + CTA",
                                    template="patterns/molecules/streamfield/blocks/embed_plus_cta_block.html",
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Words in  &lt;span&gt; tag will display in a contrasting colour."
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "internal_link",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(),
                                                                ),
                                                                (
                                                                    "link_text",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "external_link",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "link_url",
                                                                    wagtail.blocks.URLBlock(
                                                                        label="URL"
                                                                    ),
                                                                ),
                                                                (
                                                                    "link_text",
                                                                    wagtail.blocks.CharBlock(),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    icon="plus-inverse",
                                    template="patterns/molecules/streamfield/blocks/cta.html",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "feed_image",
                    models.ForeignKey(
                        blank=True,
                        help_text="Image used on listings and social media.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "homepage_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "related_services",
                    modelcluster.fields.ParentalManyToManyField(
                        related_name="case_studies", to="taxonomy.service"
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
        migrations.CreateModel(
            name="WorkPageTagSelect",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to="work.workpage",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="work_page_tag_select",
                        to="torchbox.tag",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkPageScreenshot",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="screenshots",
                        to="work.workpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkPageAuthor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="people.author",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="authors",
                        to="work.workpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                ("social_text", models.CharField(blank=True, max_length=255)),
                ("intro", wagtail.fields.RichTextField(blank=True)),
                ("hide_popular_tags", models.BooleanField(default=False)),
                (
                    "call_to_action",
                    wagtail.fields.StreamField(
                        [
                            (
                                "key_points_summary",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            ("title", wagtail.blocks.CharBlock()),
                                            ("intro", wagtail.blocks.CharBlock()),
                                            ("link", wagtail.blocks.PageChooserBlock()),
                                        ]
                                    ),
                                    help_text="Please add a minumum of 3 and a maximum of 6 key points.",
                                    icon="list-ul",
                                    max_num=6,
                                    min_num=3,
                                    template="patterns/molecules/streamfield/blocks/key_points_summary.html",
                                ),
                            ),
                            (
                                "testimonials",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                "quote",
                                                wagtail.blocks.CharBlock(
                                                    form_classname="quote title"
                                                ),
                                            ),
                                            ("name", wagtail.blocks.CharBlock()),
                                            ("role", wagtail.blocks.CharBlock()),
                                            (
                                                "link",
                                                wagtail.blocks.StreamBlock(
                                                    [
                                                        (
                                                            "internal_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "page",
                                                                        wagtail.blocks.PageChooserBlock(),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                        (
                                                            "external_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "link_url",
                                                                        wagtail.blocks.URLBlock(
                                                                            label="URL"
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                            ),
                                        ]
                                    ),
                                    icon="openquote",
                                    template="patterns/molecules/streamfield/blocks/testimonial_block.html",
                                ),
                            ),
                            (
                                "clients",
                                wagtail.blocks.ListBlock(
                                    wagtail.blocks.StructBlock(
                                        [
                                            (
                                                "image",
                                                wagtail.images.blocks.ImageChooserBlock(),
                                            ),
                                            (
                                                "link",
                                                wagtail.blocks.StreamBlock(
                                                    [
                                                        (
                                                            "internal_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "page",
                                                                        wagtail.blocks.PageChooserBlock(),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(
                                                                            required=False
                                                                        ),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                        (
                                                            "external_link",
                                                            wagtail.blocks.StructBlock(
                                                                [
                                                                    (
                                                                        "link_url",
                                                                        wagtail.blocks.URLBlock(
                                                                            label="URL"
                                                                        ),
                                                                    ),
                                                                    (
                                                                        "link_text",
                                                                        wagtail.blocks.CharBlock(),
                                                                    ),
                                                                ]
                                                            ),
                                                        ),
                                                    ],
                                                    required=False,
                                                ),
                                            ),
                                        ]
                                    ),
                                    icon="site",
                                    label="Clients logo",
                                    template="patterns/molecules/streamfield/blocks/client-logo-block.html",
                                ),
                            ),
                            (
                                "embed_plus_cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        ("title", wagtail.blocks.CharBlock()),
                                        ("intro", wagtail.blocks.CharBlock()),
                                        (
                                            "link",
                                            wagtail.blocks.PageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "external_link",
                                            wagtail.blocks.URLBlock(
                                                label="External Link", required=False
                                            ),
                                        ),
                                        ("button_text", wagtail.blocks.CharBlock()),
                                        (
                                            "image",
                                            wagtail.images.blocks.ImageChooserBlock(
                                                required=False
                                            ),
                                        ),
                                        (
                                            "embed",
                                            wagtail.embeds.blocks.EmbedBlock(
                                                label="Youtube Embed", required=False
                                            ),
                                        ),
                                    ],
                                    icon="code",
                                    label="Embed + CTA",
                                    template="patterns/molecules/streamfield/blocks/embed_plus_cta_block.html",
                                ),
                            ),
                            (
                                "cta",
                                wagtail.blocks.StructBlock(
                                    [
                                        (
                                            "text",
                                            wagtail.blocks.CharBlock(
                                                help_text="Words in  &lt;span&gt; tag will display in a contrasting colour."
                                            ),
                                        ),
                                        (
                                            "link",
                                            wagtail.blocks.StreamBlock(
                                                [
                                                    (
                                                        "internal_link",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "page",
                                                                    wagtail.blocks.PageChooserBlock(),
                                                                ),
                                                                (
                                                                    "link_text",
                                                                    wagtail.blocks.CharBlock(
                                                                        required=False
                                                                    ),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                    (
                                                        "external_link",
                                                        wagtail.blocks.StructBlock(
                                                            [
                                                                (
                                                                    "link_url",
                                                                    wagtail.blocks.URLBlock(
                                                                        label="URL"
                                                                    ),
                                                                ),
                                                                (
                                                                    "link_text",
                                                                    wagtail.blocks.CharBlock(),
                                                                ),
                                                            ]
                                                        ),
                                                    ),
                                                ]
                                            ),
                                        ),
                                    ],
                                    icon="plus-inverse",
                                    template="patterns/molecules/streamfield/blocks/cta.html",
                                ),
                            ),
                        ],
                        blank=True,
                        use_json_field=True,
                    ),
                ),
                (
                    "social_image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="images.customimage",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page", models.Model),
        ),
    ]
