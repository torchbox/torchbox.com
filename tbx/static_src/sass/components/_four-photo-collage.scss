@use 'config' as *;

.four-photo-collage {
    display: grid;
    grid-template-columns: subgrid;

    &__scroller {
        width: 100%;
        overflow-x: scroll;
        margin-bottom: $spacer-medium;
        grid-column: 1 / span 5;

        @include media-query(large) {
            overflow-x: visible;
            width: auto;
            margin-bottom: $spacer-small-plus;
            grid-column: 2 / span 11;
        }

        &:focus {
            @include focus-style();
        }
    }

    &__container {
        display: flex;
        column-gap: 10px;
        height: 270px;
        // calculated based on the total width of the images rendered at the correct aspect ratio plus the 10px gap
        aspect-ratio: 1946 / 403;

        @include media-query(small) {
            height: 370px;
        }

        @include media-query(medium) {
            height: 403px;
        }

        @include media-query(large) {
            display: grid;
            height: auto;
            // based on the size we want the images to render
            grid-template-columns:
                minmax(100px, 200px) minmax(60px, 120px) minmax(210px, 420px)
                minmax(320px, 640px);
            grid-template-rows: minmax(180px, 360px) minmax(230px, 460px) minmax(
                    40px,
                    80px
                );
            gap: $spacer-mini-plus;
            // ensures the individual images remain at the correct aspect ratio
            aspect-ratio: 7 / 4;
        }
    }

    // These styles could just be applied direct to the images without a wrapper,
    // but we do it on the wrapper to save having to mock loads of images with different
    // classes in the pattern library
    &__image-wrapper {
        @include media-query(large) {
            height: auto;
        }

        // Some browsers seem to need the aspect ratio set explicitly on each image wrapper at mobile
        // but this needs unsetting at desktop
        &--1 {
            aspect-ratio: 4 / 3;

            @include media-query(large) {
                grid-column: 1 / span 2;
                grid-row: 1 / span 1;
                aspect-ratio: auto;
            }
        }

        &--2 {
            aspect-ratio: 4 / 3;

            @include media-query(large) {
                grid-column: 3 / span 1;
                grid-row: 1 / span 1;
                aspect-ratio: auto;
            }
        }

        &--3 {
            aspect-ratio: 3 / 4;

            @include media-query(large) {
                grid-column: 4 / span 1;
                grid-row: 1 / span 3;
                aspect-ratio: auto;
            }
        }

        &--4 {
            aspect-ratio: 7 / 5;

            @include media-query(large) {
                grid-column: 2 / span 2;
                grid-row: 2 / span 1;
                aspect-ratio: auto;
            }
        }
    }

    &__image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    &__caption {
        grid-column: 1 / span 4;

        @include media-query(large) {
            grid-column: 1 / span 7;
        }
    }
}
